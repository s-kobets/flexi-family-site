---
import type { HTMLAttributes } from "astro/types";
import { cn } from "@/shared/lib/cn";

import styles from "./styles.module.css";

interface Props extends HTMLAttributes<"textarea"> {
  class?: string;
  name: string;
  value: string;
  label?: string;
  hint?: string;
  variant?: "sm" | "md";
  error?: string;
}

const {
  class: className,
  name,
  value,
  label,
  hint,
  variant = "sm",
  error,
  ...rest
} = Astro.props;
const hasError = Boolean(error);
---

{
  label ? (
    <label class={cn(styles["label-only"], className)}>
      <span class={styles.label}>{label}</span>
      <textarea
        name={name}
        class={cn(styles.root, styles[`variant-${variant}`], {
          [styles["has-error"]]: hasError,
        })}
        {...rest}
      />
      {hasError ? (
        <span class={styles.error}>{error}</span>
      ) : (
        hint && <span class={styles.hint}>{hint}</span>
      )}
    </label>
  ) : (
    <>
      <textarea
        name={name}
        class={cn(
          styles.root,
          styles[`variant-${variant}`],
          {
            [styles["has-error"]]: hasError,
          },
          className,
        )}
        {...rest}
      />
      {error ? (
        <span class={styles.error}>{error}</span>
      ) : (
        hint && <span class={styles.hint}>{hint}</span>
      )}
    </>
  )
}
